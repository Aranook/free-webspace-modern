## Project
# GitHub Actions workflow
# Auteur : ACOMDIR
# Url contact: https://www.facebook.com/acomdir/
# Please come vote my page Facebook to support me in the development of this open source project.

name: ci-build-gh-pages

on:
  push:
    branches:
      - "main"  # Déclenche le workflow sur un push vers la branche 'main'
  pull_request:
    branches:
      - "main"  # Déclenche le workflow sur un pull request vers la branche 'main'
  workflow_dispatch:  # Permet de déclencher manuellement le workflow

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest  # Exécution sur un environnement Ubuntu

    steps:

      # 1. Vérifier le code source
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. Configurer l'identité Git pour les commits
      - name: Set up Git identity
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.c
    
      # 3. Vérifier si la branche gh-pages existe, sinon la créer
      - name: Check if gh-pages exists
        run: |
          git fetch origin
          if ! git show-ref --quiet refs/heads/gh-pages; then
            echo "La branche gh-pages n'existe pas, création de la branche."
            git checkout --orphan gh-pages  # Créer une nouvelle branche orpheline
            git rm -rf .  # Supprimer tous les fichiers (car la branche est orpheline)
            git commit --allow-empty -m "Initial commit for gh-pages"
            git push origin gh-pages  # Pousser la branche gh-pages sur le dépôt distant
          else
            echo "La branche gh-pages existe déjà."
          fi

      # 4. Vérifier le code source
      - name: Checkout code
        uses: actions/checkout@v4

      # 5. Configurer Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.13.1'  # Version Python valide pour votre projet

      # 4. Installer les dépendances (si vous avez un fichier requirements.txt)
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip

      # 6. Exécuter des tests ou construire votre projet
      - name: Run tests or build
        run: |
          # Remplacer par la commande de build ou de test de votre projet

      # 7. Déployer sur la branche gh-pages
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          personal_token: ${{ secrets.GITHUB_TOKEN }}  # Utiliser le token GitHub pour l'authentification
          branch: gh-pages  # Branche de destination
          folder: build  # Le dossier à déployer (modifiez-le en fonction de votre configuration)
          clean: true  # Nettoie le répertoire gh-pages avant le déploiement

      # Optionnel : Si vous souhaitez notifier ou exécuter d'autres actions après le déploiement
      - name: Notify deployment success
        run: echo "Deployment to gh-pages successful!"

      # Déployer l'artefact sur GitHub Pages
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        with:
          branch: gh-pages  # Déployer sur la branche gh-pages au lieu de main (commonly used for GitHub Pages)

      # Récupérer l'URL de la page déployée et afficher un lien cliquable
      - name: Provide link to deployed site
        run: |
          echo "Site déployé avec succès ! Vous pouvez accéder à la page à l'adresse suivante :"
          echo "${{ steps.deployment.outputs.page_url }}"
