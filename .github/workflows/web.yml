name: Deploy Web App to GitHub Pages

on:
  push:
    branches:
      - main  # Déclenche le workflow sur chaque push vers la branche 'main'
  workflow_dispatch:  # Permet d'exécuter manuellement le workflow via l'onglet Actions

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Job de construction du projet
  build:
    runs-on: ubuntu-latest
    steps:
      # Checkout le code source du dépôt
      - name: Checkout repository
        uses: actions/checkout@v4

      # Vérifier si package.json existe, sinon créer un package.json et installer les dépendances de base
      - name: Initialize project and install dependencies
        run: |
          # Initialiser un projet npm avec un package.json minimal
          npm init -y
          
          # Installer les dépendances nécessaires
          npm install react react-dom react-scripts vue vue-router axios bootstrap

          # Créer un fichier index.html minimal dans le dossier public si il n'existe pas
          mkdir -p public
          echo '<!DOCTYPE html><html lang="en"><head><meta charset="UTF-8"><meta name="viewport" content="width=device-width, initial-scale=1.0"><title>React App</title></head><body><div id="root"></div></body></html>' > public/index.html

          # Créer un fichier index.js dans le dossier src
          mkdir -p src
          echo 'import React from "react"; import ReactDOM from "react-dom"; import "./index.css"; import App from "./App"; ReactDOM.render(<React.StrictMode><App /></React.StrictMode>, document.getElementById("root"));' > src/index.js

          # Créer un fichier App.js simple dans src
          echo 'import React from "react"; const App = () => <div>Welcome to React!</div>; export default App;' > src/App.js

          # Créer un fichier index.css vide (ou avec quelques styles)
          echo 'body { font-family: Arial, sans-serif; margin: 0; padding: 0; }' > src/index.css

      # Ajouter un script "build" au package.json
      - name: Add build script to package.json
        run: |
          # Ajouter le script build nécessaire pour React
          jq '.scripts.build="react-scripts build"' package.json > temp.json && mv temp.json package.json

      # Construire l'application (ceci génère les fichiers de build)
      - name: Build the project
        run: |
          npm run build

      # Vérifier l'existence du dossier de build
      - name: Check build directory
        run: |
          if [ -d build ]; then
            echo "Le dossier 'build' existe et contient les fichiers suivants :"
            ls -l build
          else
            echo "Erreur : Le dossier 'build' est introuvable."
            exit 1
          fi

      # Déployer le build sur la branche gh-pages
      - name: Deploy build to gh-pages
        run: |
          git fetch origin gh-pages || echo "Branche gh-pages n'existe pas"
          git checkout --orphan gh-pages
          git reset --hard
          git clean -fdx
          
          if [ -d build ]; then
            cp -r build/* .
          else
            echo "Erreur : Le dossier 'build' est introuvable. Assurez-vous que l'étape de construction s'est bien déroulée."
            exit 1
          fi
          
          git config user.name "GitHub Actions Bot"
          git config user.email "actions@github.com"
          git add .
          git commit -m "Déploiement GitHub Pages" || echo "Rien à committer"
          git push origin gh-pages --force

  # Job de déploiement sur GitHub Pages
  deploy:
    runs-on: ubuntu-latest
    needs: build  # Ce job dépend du job "build" pour fonctionner
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}  # URL de la page GitHub Pages

    steps:
      # Checkout du code pour déployer sur la branche 'main'
      - name: Checkout repository again
        uses: actions/checkout@v4
        with:
          ref: main  # On s'assure d'être sur la branche main pour le déploiement

      # Déployer l'artefact sur GitHub Pages
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        with:
          branch: gh-pages  # Déployer sur la branche gh-pages au lieu de main (commonly used for GitHub Pages)

      # Récupérer l'URL de la page déployée et afficher un lien cliquable
      - name: Provide link to deployed site
        run: |
          echo "Site déployé avec succès ! Vous pouvez accéder à la page à l'adresse suivante :"
          echo "${{ steps.deployment.outputs.page_url }}"
