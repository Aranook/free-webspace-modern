name: Deploy Web App to GitHub Pages

on:
  push:
    branches:
      - main  # Déclenche le workflow sur chaque push vers la branche 'main'
  workflow_dispatch:  # Permet d'exécuter manuellement le workflow via l'onglet Actions

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Job de construction du projet
  build:
    runs-on: ubuntu-latest
    steps:
      # Checkout le code source du dépôt
      - name: Checkout repository
        uses: actions/checkout@v4

      # Vérifier si package.json existe, sinon créer un package.json et installer les dépendances de base
      - name: Initialize project and install dependencies
        run: |
          npm init -y
          npm install react react-dom react-scripts vue vue-router axios bootstrap

          mkdir -p public
          echo '<!DOCTYPE html><html lang="en"><head><meta charset="UTF-8"><meta name="viewport" content="width=device-width, initial-scale=1.0"><title>React App</title></head><body><div id="root"></div></body></html>' > public/index.html

          mkdir -p src
          echo 'import React from "react"; import ReactDOM from "react-dom"; import "./index.css"; import App from "./App"; ReactDOM.render(<React.StrictMode><App /></React.StrictMode>, document.getElementById("root"));' > src/index.js

          echo 'import React from "react"; const App = () => <div>Welcome to React!</div>; export default App;' > src/App.js

          echo 'body { font-family: Arial, sans-serif; margin: 0; padding: 0; }' > src/index.css

      - name: Add build script to package.json
        run: jq '.scripts.build="react-scripts build"' package.json > temp.json && mv temp.json package.json

      - name: Build the project
        run: npm run build

      - name: Check build directory
        run: |
          if [ -d build ]; then
            echo "Le dossier 'build' existe et contient les fichiers suivants :"
            ls -l build
          else
            echo "Erreur : Le dossier 'build' est introuvable."
            exit 1
          fi

  # Job de déploiement sur GitHub Pages
  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      # Télécharger l'artefact généré par le job 'build'
      - name: Download build artifact
        uses: actions/download-artifact@v3
        with:
          name: build
          path: build

      # Checkout sur la branche gh-pages
      - name: Checkout gh-pages branch
        run: |
          git fetch origin gh-pages || echo "Branche gh-pages n'existe pas"
          git checkout --orphan gh-pages
          git reset --hard
          git clean -fdx

      # Copier tout l'environnement (y compris node_modules et autres fichiers)
      - name: Copy environment to gh-pages
        run: |
          cp -r .github node_modules public src package.json package-lock.json build/* .
          rm -rf build  # Supprime le dossier build pour éviter des duplications inutiles

      # Configurer Git et committer les changements
      - name: Commit and push changes
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "actions@github.com"
          git add .
          git commit -m "Déploiement complet de l'environnement sur GitHub Pages"
          git push origin gh-pages --force

      # Récupérer l'URL de la page déployée et afficher un lien cliquable
      - name: Provide link to deployed site
        run: |
          echo "Site déployé avec succès ! Vous pouvez accéder à la page à l'adresse suivante :"
          echo "${{ steps.deployment.outputs.page_url }}"
